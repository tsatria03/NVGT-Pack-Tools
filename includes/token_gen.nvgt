/* token_gen.nvgt - very simple function to generate a string of random letters and numbers
 *
 * NVGT - NonVisual Gaming Toolkit
 * Copyright (c) 2022-2024 Sam Tupy
 * https://nvgt.gg
 * This software is provided "as-is", without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software.
 * Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:
 * 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
*/

//Possible token modes.
enum token_gen_flag {
    token_gen_flag_all = 0,
    token_gen_flag_characters,
    token_gen_flag_numbers,
    token_gen_flag_symbols,
    token_gen_flag_numbers_symbols,
    token_gen_flag_characters_symbols,
    token_gen_flag_characters_numbers
}
string generate_token(int token_length, int mode = token_gen_flag_all) {
    string chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
    string numbers = "1234567890";
    string symbols = "!@#$%^&*()[]{};:'\"\\|,.<>_?/+-=`~";
    string token_sims = chars + numbers + symbols;
    if (mode == token_gen_flag_characters) token_sims = chars;
    else if (mode == token_gen_flag_numbers) token_sims = numbers;
    else if (mode == token_gen_flag_symbols) token_sims = symbols;
    else if (mode == token_gen_flag_numbers_symbols) token_sims = numbers + symbols;
    else if (mode == token_gen_flag_characters_symbols) token_sims = chars + symbols;
    else if (mode == token_gen_flag_characters_numbers) token_sims = chars + numbers;
    return generate_custom_token(token_length, token_sims);
}
string generate_custom_token(int token_length, string characters) {
	if (characters.empty() || token_length <= 0) return "";
	string final_token;
	for (uint i = 0; i < token_length; i++)
		final_token += characters[random(0, characters.length() - 1)];
	return final_token;
}
